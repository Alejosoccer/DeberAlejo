// <auto-generated />
using System;
using AlejandroDeber.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlejandroDeber.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20200803015010_Productos")]
    partial class Productos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AlejandroDeber.Models.Lavadora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Lavadora");
                });

            modelBuilder.Entity("AlejandroDeber.Models.Microonda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Microonda");
                });

            modelBuilder.Entity("AlejandroDeber.Models.Nevera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Nevera");
                });

            modelBuilder.Entity("AlejandroDeber.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LavadoraId")
                        .HasColumnType("int");

                    b.Property<int?>("NeveraId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TabletId")
                        .HasColumnType("int");

                    b.Property<int?>("TelevisionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LavadoraId");

                    b.HasIndex("NeveraId");

                    b.HasIndex("TabletId");

                    b.HasIndex("TelevisionId");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("AlejandroDeber.Models.Television", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Televison");
                });

            modelBuilder.Entity("AlejandroDeber.Models.Lavadora", b =>
                {
                    b.HasOne("AlejandroDeber.Models.Persona", null)
                        .WithMany("Lavadoras")
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("AlejandroDeber.Models.Microonda", b =>
                {
                    b.HasOne("AlejandroDeber.Models.Persona", null)
                        .WithMany("Microondas")
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("AlejandroDeber.Models.Nevera", b =>
                {
                    b.HasOne("AlejandroDeber.Models.Persona", null)
                        .WithMany("Neveras")
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("AlejandroDeber.Models.Persona", b =>
                {
                    b.HasOne("AlejandroDeber.Models.Lavadora", "Lavadora")
                        .WithMany()
                        .HasForeignKey("LavadoraId");

                    b.HasOne("AlejandroDeber.Models.Nevera", "Nevera")
                        .WithMany()
                        .HasForeignKey("NeveraId");

                    b.HasOne("AlejandroDeber.Models.Microonda", "Tablet")
                        .WithMany()
                        .HasForeignKey("TabletId");

                    b.HasOne("AlejandroDeber.Models.Television", "Television")
                        .WithMany()
                        .HasForeignKey("TelevisionId");
                });

            modelBuilder.Entity("AlejandroDeber.Models.Television", b =>
                {
                    b.HasOne("AlejandroDeber.Models.Persona", null)
                        .WithMany("Televisiones")
                        .HasForeignKey("PersonaId");
                });
#pragma warning restore 612, 618
        }
    }
}
